version: '3.4'

networks:
  default:
    external:
      name: nat



services:
  sqldb:
    image: olasek/devsqlserver:latest
    container_name: sqlarchiedb
    ports:
      - "1433:1433"
    environment:
     SA_PASSWORD: "5uP3RC0mpl3Xp@55w0rD"
     ACCEPT_EULA: "Y"
     MSSQL_PID: Developer


  archiesystem:
    image: olasek/archie
    container_name: archie
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
    build:
      context: .
      dockerfile: Archie\Dockerfile

  cryptoapi:
    image: olasek/cryptoapi
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5000
    build:
      context: .
      dockerfile: CryptoAPI\Dockerfile


  goldapi:
    image: olasek/goldapi
    container_name: goldapi
    build:
      context: .
      dockerfile: GoldAPI\Dockerfile

  #sliderfrontend:
   # image: olasek/web-sli
   # container_name: slider
   # build:
   #   context: .
   #   dockerfile: Suwak_nodejs\Dockerfile 
   # ports:
   #   - "8080:8080"
   # environment: 
   #   - VOTE_SERVICE_URL=http://172.26.253.199/v1/voting/ 
  #  networks:
   #   - nat




#docker run --net=nat --name badziprzyjdzan -p 8080:8080 -e VOTE_SERVICE_URL=http://172.26.253.199/v1/voting/ olasek/web-app-node
#  exchangeapi:
#    image: olasek/python
#    ports:
#    - "5000:5000"

#  suwak:
#    image: olasek/suwak
#    build:
#      context: .
#      dockerfile: Suwak\Dockerfile


#  diagram:
#    image: olasek/diagram
#    build:
#      context: .
#      dockerfile: Diagram\Dockerfile

#  voteservice:
#    image: olasek/slider
#    container_name: voteservapp
#    build:
#      context: .\VoteService
#      dockerfile: Dockerfile
